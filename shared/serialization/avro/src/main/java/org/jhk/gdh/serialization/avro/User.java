/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.jhk.gdh.serialization.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5559095902511758951L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"org.jhk.gdh.serialization.avro\",\"fields\":[{\"name\":\"avatar\",\"type\":\"bytes\"},{\"name\":\"achievements\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"address\",\"type\":{\"type\":\"record\",\"name\":\"Address\",\"fields\":[{\"name\":\"address\",\"type\":\"string\"},{\"name\":\"coordinates\",\"type\":{\"type\":\"array\",\"items\":\"double\"}},{\"name\":\"description\",\"type\":\"string\"}]}},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"foundationId\",\"type\":\"long\"},{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"level\",\"type\":\"int\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"password\",\"type\":\"string\"},{\"name\":\"title\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.nio.ByteBuffer avatar;
  @Deprecated public java.util.List<java.lang.CharSequence> achievements;
  @Deprecated public org.jhk.gdh.serialization.avro.Address address;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public long foundationId;
  @Deprecated public long id;
  @Deprecated public int level;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence password;
  @Deprecated public java.lang.CharSequence title;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public User() {}

  /**
   * All-args constructor.
   */
  public User(java.nio.ByteBuffer avatar, java.util.List<java.lang.CharSequence> achievements, org.jhk.gdh.serialization.avro.Address address, java.lang.CharSequence email, java.lang.Long foundationId, java.lang.Long id, java.lang.Integer level, java.lang.CharSequence name, java.lang.CharSequence password, java.lang.CharSequence title) {
    this.avatar = avatar;
    this.achievements = achievements;
    this.address = address;
    this.email = email;
    this.foundationId = foundationId;
    this.id = id;
    this.level = level;
    this.name = name;
    this.password = password;
    this.title = title;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return avatar;
    case 1: return achievements;
    case 2: return address;
    case 3: return email;
    case 4: return foundationId;
    case 5: return id;
    case 6: return level;
    case 7: return name;
    case 8: return password;
    case 9: return title;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: avatar = (java.nio.ByteBuffer)value$; break;
    case 1: achievements = (java.util.List<java.lang.CharSequence>)value$; break;
    case 2: address = (org.jhk.gdh.serialization.avro.Address)value$; break;
    case 3: email = (java.lang.CharSequence)value$; break;
    case 4: foundationId = (java.lang.Long)value$; break;
    case 5: id = (java.lang.Long)value$; break;
    case 6: level = (java.lang.Integer)value$; break;
    case 7: name = (java.lang.CharSequence)value$; break;
    case 8: password = (java.lang.CharSequence)value$; break;
    case 9: title = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'avatar' field.
   */
  public java.nio.ByteBuffer getAvatar() {
    return avatar;
  }

  /**
   * Sets the value of the 'avatar' field.
   * @param value the value to set.
   */
  public void setAvatar(java.nio.ByteBuffer value) {
    this.avatar = value;
  }

  /**
   * Gets the value of the 'achievements' field.
   */
  public java.util.List<java.lang.CharSequence> getAchievements() {
    return achievements;
  }

  /**
   * Sets the value of the 'achievements' field.
   * @param value the value to set.
   */
  public void setAchievements(java.util.List<java.lang.CharSequence> value) {
    this.achievements = value;
  }

  /**
   * Gets the value of the 'address' field.
   */
  public org.jhk.gdh.serialization.avro.Address getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(org.jhk.gdh.serialization.avro.Address value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'foundationId' field.
   */
  public java.lang.Long getFoundationId() {
    return foundationId;
  }

  /**
   * Sets the value of the 'foundationId' field.
   * @param value the value to set.
   */
  public void setFoundationId(java.lang.Long value) {
    this.foundationId = value;
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'level' field.
   */
  public java.lang.Integer getLevel() {
    return level;
  }

  /**
   * Sets the value of the 'level' field.
   * @param value the value to set.
   */
  public void setLevel(java.lang.Integer value) {
    this.level = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'password' field.
   */
  public java.lang.CharSequence getPassword() {
    return password;
  }

  /**
   * Sets the value of the 'password' field.
   * @param value the value to set.
   */
  public void setPassword(java.lang.CharSequence value) {
    this.password = value;
  }

  /**
   * Gets the value of the 'title' field.
   */
  public java.lang.CharSequence getTitle() {
    return title;
  }

  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.CharSequence value) {
    this.title = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static org.jhk.gdh.serialization.avro.User.Builder newBuilder() {
    return new org.jhk.gdh.serialization.avro.User.Builder();
  }
  
  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static org.jhk.gdh.serialization.avro.User.Builder newBuilder(org.jhk.gdh.serialization.avro.User.Builder other) {
    return new org.jhk.gdh.serialization.avro.User.Builder(other);
  }
  
  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static org.jhk.gdh.serialization.avro.User.Builder newBuilder(org.jhk.gdh.serialization.avro.User other) {
    return new org.jhk.gdh.serialization.avro.User.Builder(other);
  }
  
  /**
   * RecordBuilder for User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    private java.nio.ByteBuffer avatar;
    private java.util.List<java.lang.CharSequence> achievements;
    private org.jhk.gdh.serialization.avro.Address address;
    private org.jhk.gdh.serialization.avro.Address.Builder addressBuilder;
    private java.lang.CharSequence email;
    private long foundationId;
    private long id;
    private int level;
    private java.lang.CharSequence name;
    private java.lang.CharSequence password;
    private java.lang.CharSequence title;

    /** Creates a new Builder */
    private Builder() {
      super(org.jhk.gdh.serialization.avro.User.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.jhk.gdh.serialization.avro.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.avatar)) {
        this.avatar = data().deepCopy(fields()[0].schema(), other.avatar);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.achievements)) {
        this.achievements = data().deepCopy(fields()[1].schema(), other.achievements);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      if (other.hasAddressBuilder()) {
        this.addressBuilder = org.jhk.gdh.serialization.avro.Address.newBuilder(other.getAddressBuilder());
      }
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.foundationId)) {
        this.foundationId = data().deepCopy(fields()[4].schema(), other.foundationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.level)) {
        this.level = data().deepCopy(fields()[6].schema(), other.level);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.password)) {
        this.password = data().deepCopy(fields()[8].schema(), other.password);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.title)) {
        this.title = data().deepCopy(fields()[9].schema(), other.title);
        fieldSetFlags()[9] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(org.jhk.gdh.serialization.avro.User other) {
            super(org.jhk.gdh.serialization.avro.User.SCHEMA$);
      if (isValidValue(fields()[0], other.avatar)) {
        this.avatar = data().deepCopy(fields()[0].schema(), other.avatar);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.achievements)) {
        this.achievements = data().deepCopy(fields()[1].schema(), other.achievements);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.address)) {
        this.address = data().deepCopy(fields()[2].schema(), other.address);
        fieldSetFlags()[2] = true;
      }
      this.addressBuilder = null;
      if (isValidValue(fields()[3], other.email)) {
        this.email = data().deepCopy(fields()[3].schema(), other.email);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.foundationId)) {
        this.foundationId = data().deepCopy(fields()[4].schema(), other.foundationId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.id)) {
        this.id = data().deepCopy(fields()[5].schema(), other.id);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.level)) {
        this.level = data().deepCopy(fields()[6].schema(), other.level);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.name)) {
        this.name = data().deepCopy(fields()[7].schema(), other.name);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.password)) {
        this.password = data().deepCopy(fields()[8].schema(), other.password);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.title)) {
        this.title = data().deepCopy(fields()[9].schema(), other.title);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'avatar' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getAvatar() {
      return avatar;
    }

    /**
      * Sets the value of the 'avatar' field.
      * @param value The value of 'avatar'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setAvatar(java.nio.ByteBuffer value) {
      validate(fields()[0], value);
      this.avatar = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'avatar' field has been set.
      * @return True if the 'avatar' field has been set, false otherwise.
      */
    public boolean hasAvatar() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'avatar' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearAvatar() {
      avatar = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'achievements' field.
      * @return The value.
      */
    public java.util.List<java.lang.CharSequence> getAchievements() {
      return achievements;
    }

    /**
      * Sets the value of the 'achievements' field.
      * @param value The value of 'achievements'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setAchievements(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[1], value);
      this.achievements = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'achievements' field has been set.
      * @return True if the 'achievements' field has been set, false otherwise.
      */
    public boolean hasAchievements() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'achievements' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearAchievements() {
      achievements = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'address' field.
      * @return The value.
      */
    public org.jhk.gdh.serialization.avro.Address getAddress() {
      return address;
    }

    /**
      * Sets the value of the 'address' field.
      * @param value The value of 'address'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setAddress(org.jhk.gdh.serialization.avro.Address value) {
      validate(fields()[2], value);
      this.addressBuilder = null;
      this.address = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'address' field has been set.
      * @return True if the 'address' field has been set, false otherwise.
      */
    public boolean hasAddress() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'address' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public org.jhk.gdh.serialization.avro.Address.Builder getAddressBuilder() {
      if (addressBuilder == null) {
        if (hasAddress()) {
          setAddressBuilder(org.jhk.gdh.serialization.avro.Address.newBuilder(address));
        } else {
          setAddressBuilder(org.jhk.gdh.serialization.avro.Address.newBuilder());
        }
      }
      return addressBuilder;
    }

    /**
     * Sets the Builder instance for the 'address' field
     * @return This builder.
     */
    public org.jhk.gdh.serialization.avro.User.Builder setAddressBuilder(org.jhk.gdh.serialization.avro.Address.Builder value) {
      clearAddress();
      addressBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'address' field has an active Builder instance
     * @return True if the 'address' field has an active Builder instance
     */
    public boolean hasAddressBuilder() {
      return addressBuilder != null;
    }

    /**
      * Clears the value of the 'address' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearAddress() {
      address = null;
      addressBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'email' field.
      * @return The value.
      */
    public java.lang.CharSequence getEmail() {
      return email;
    }

    /**
      * Sets the value of the 'email' field.
      * @param value The value of 'email'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.email = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'email' field has been set.
      * @return True if the 'email' field has been set, false otherwise.
      */
    public boolean hasEmail() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'email' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearEmail() {
      email = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'foundationId' field.
      * @return The value.
      */
    public java.lang.Long getFoundationId() {
      return foundationId;
    }

    /**
      * Sets the value of the 'foundationId' field.
      * @param value The value of 'foundationId'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setFoundationId(long value) {
      validate(fields()[4], value);
      this.foundationId = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'foundationId' field has been set.
      * @return True if the 'foundationId' field has been set, false otherwise.
      */
    public boolean hasFoundationId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'foundationId' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearFoundationId() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setId(long value) {
      validate(fields()[5], value);
      this.id = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearId() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'level' field.
      * @return The value.
      */
    public java.lang.Integer getLevel() {
      return level;
    }

    /**
      * Sets the value of the 'level' field.
      * @param value The value of 'level'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setLevel(int value) {
      validate(fields()[6], value);
      this.level = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'level' field has been set.
      * @return True if the 'level' field has been set, false otherwise.
      */
    public boolean hasLevel() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'level' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearLevel() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setName(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.name = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearName() {
      name = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'password' field.
      * @return The value.
      */
    public java.lang.CharSequence getPassword() {
      return password;
    }

    /**
      * Sets the value of the 'password' field.
      * @param value The value of 'password'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setPassword(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.password = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'password' field has been set.
      * @return True if the 'password' field has been set, false otherwise.
      */
    public boolean hasPassword() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'password' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearPassword() {
      password = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.CharSequence getTitle() {
      return title;
    }

    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder setTitle(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.title = value;
      fieldSetFlags()[9] = true;
      return this; 
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public org.jhk.gdh.serialization.avro.User.Builder clearTitle() {
      title = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public User build() {
      try {
        User record = new User();
        record.avatar = fieldSetFlags()[0] ? this.avatar : (java.nio.ByteBuffer) defaultValue(fields()[0]);
        record.achievements = fieldSetFlags()[1] ? this.achievements : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[1]);
        if (addressBuilder != null) {
          record.address = this.addressBuilder.build();
        } else {
          record.address = fieldSetFlags()[2] ? this.address : (org.jhk.gdh.serialization.avro.Address) defaultValue(fields()[2]);
        }
        record.email = fieldSetFlags()[3] ? this.email : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.foundationId = fieldSetFlags()[4] ? this.foundationId : (java.lang.Long) defaultValue(fields()[4]);
        record.id = fieldSetFlags()[5] ? this.id : (java.lang.Long) defaultValue(fields()[5]);
        record.level = fieldSetFlags()[6] ? this.level : (java.lang.Integer) defaultValue(fields()[6]);
        record.name = fieldSetFlags()[7] ? this.name : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.password = fieldSetFlags()[8] ? this.password : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.title = fieldSetFlags()[9] ? this.title : (java.lang.CharSequence) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}

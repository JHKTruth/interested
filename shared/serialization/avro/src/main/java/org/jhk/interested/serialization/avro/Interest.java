/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.jhk.interested.serialization.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Interest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7858149350796499175L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Interest\",\"namespace\":\"org.jhk.interested.serialization.avro\",\"fields\":[{\"name\":\"id\",\"type\":\"long\"},{\"name\":\"userId\",\"type\":\"long\"},{\"name\":\"timeStamp\",\"type\":\"long\"},{\"name\":\"value\",\"type\":\"string\"},{\"name\":\"Action\",\"type\":{\"type\":\"enum\",\"name\":\"ACTION\",\"symbols\":[\"CREATE\",\"SUBSCRIBE\",\"UNSUBSCRIBE\",\"DELETE\"]}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long id;
  @Deprecated public long userId;
  @Deprecated public long timeStamp;
  @Deprecated public java.lang.CharSequence value;
  @Deprecated public org.jhk.interested.serialization.avro.ACTION Action;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Interest() {}

  /**
   * All-args constructor.
   */
  public Interest(java.lang.Long id, java.lang.Long userId, java.lang.Long timeStamp, java.lang.CharSequence value, org.jhk.interested.serialization.avro.ACTION Action) {
    this.id = id;
    this.userId = userId;
    this.timeStamp = timeStamp;
    this.value = value;
    this.Action = Action;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return userId;
    case 2: return timeStamp;
    case 3: return value;
    case 4: return Action;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: userId = (java.lang.Long)value$; break;
    case 2: timeStamp = (java.lang.Long)value$; break;
    case 3: value = (java.lang.CharSequence)value$; break;
    case 4: Action = (org.jhk.interested.serialization.avro.ACTION)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'userId' field.
   */
  public java.lang.Long getUserId() {
    return userId;
  }

  /**
   * Sets the value of the 'userId' field.
   * @param value the value to set.
   */
  public void setUserId(java.lang.Long value) {
    this.userId = value;
  }

  /**
   * Gets the value of the 'timeStamp' field.
   */
  public java.lang.Long getTimeStamp() {
    return timeStamp;
  }

  /**
   * Sets the value of the 'timeStamp' field.
   * @param value the value to set.
   */
  public void setTimeStamp(java.lang.Long value) {
    this.timeStamp = value;
  }

  /**
   * Gets the value of the 'value' field.
   */
  public java.lang.CharSequence getValue() {
    return value;
  }

  /**
   * Sets the value of the 'value' field.
   * @param value the value to set.
   */
  public void setValue(java.lang.CharSequence value) {
    this.value = value;
  }

  /**
   * Gets the value of the 'Action' field.
   */
  public org.jhk.interested.serialization.avro.ACTION getAction() {
    return Action;
  }

  /**
   * Sets the value of the 'Action' field.
   * @param value the value to set.
   */
  public void setAction(org.jhk.interested.serialization.avro.ACTION value) {
    this.Action = value;
  }

  /**
   * Creates a new Interest RecordBuilder.
   * @return A new Interest RecordBuilder
   */
  public static org.jhk.interested.serialization.avro.Interest.Builder newBuilder() {
    return new org.jhk.interested.serialization.avro.Interest.Builder();
  }
  
  /**
   * Creates a new Interest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Interest RecordBuilder
   */
  public static org.jhk.interested.serialization.avro.Interest.Builder newBuilder(org.jhk.interested.serialization.avro.Interest.Builder other) {
    return new org.jhk.interested.serialization.avro.Interest.Builder(other);
  }
  
  /**
   * Creates a new Interest RecordBuilder by copying an existing Interest instance.
   * @param other The existing instance to copy.
   * @return A new Interest RecordBuilder
   */
  public static org.jhk.interested.serialization.avro.Interest.Builder newBuilder(org.jhk.interested.serialization.avro.Interest other) {
    return new org.jhk.interested.serialization.avro.Interest.Builder(other);
  }
  
  /**
   * RecordBuilder for Interest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Interest>
    implements org.apache.avro.data.RecordBuilder<Interest> {

    private long id;
    private long userId;
    private long timeStamp;
    private java.lang.CharSequence value;
    private org.jhk.interested.serialization.avro.ACTION Action;

    /** Creates a new Builder */
    private Builder() {
      super(org.jhk.interested.serialization.avro.Interest.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(org.jhk.interested.serialization.avro.Interest.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[2].schema(), other.timeStamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.value)) {
        this.value = data().deepCopy(fields()[3].schema(), other.value);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Action)) {
        this.Action = data().deepCopy(fields()[4].schema(), other.Action);
        fieldSetFlags()[4] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing Interest instance
     * @param other The existing instance to copy.
     */
    private Builder(org.jhk.interested.serialization.avro.Interest other) {
            super(org.jhk.interested.serialization.avro.Interest.SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.userId)) {
        this.userId = data().deepCopy(fields()[1].schema(), other.userId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.timeStamp)) {
        this.timeStamp = data().deepCopy(fields()[2].schema(), other.timeStamp);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.value)) {
        this.value = data().deepCopy(fields()[3].schema(), other.value);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.Action)) {
        this.Action = data().deepCopy(fields()[4].schema(), other.Action);
        fieldSetFlags()[4] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }

    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder setId(long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder clearId() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'userId' field.
      * @return The value.
      */
    public java.lang.Long getUserId() {
      return userId;
    }

    /**
      * Sets the value of the 'userId' field.
      * @param value The value of 'userId'.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder setUserId(long value) {
      validate(fields()[1], value);
      this.userId = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'userId' field has been set.
      * @return True if the 'userId' field has been set, false otherwise.
      */
    public boolean hasUserId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'userId' field.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder clearUserId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'timeStamp' field.
      * @return The value.
      */
    public java.lang.Long getTimeStamp() {
      return timeStamp;
    }

    /**
      * Sets the value of the 'timeStamp' field.
      * @param value The value of 'timeStamp'.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder setTimeStamp(long value) {
      validate(fields()[2], value);
      this.timeStamp = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'timeStamp' field has been set.
      * @return True if the 'timeStamp' field has been set, false otherwise.
      */
    public boolean hasTimeStamp() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'timeStamp' field.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder clearTimeStamp() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'value' field.
      * @return The value.
      */
    public java.lang.CharSequence getValue() {
      return value;
    }

    /**
      * Sets the value of the 'value' field.
      * @param value The value of 'value'.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder setValue(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.value = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'value' field has been set.
      * @return True if the 'value' field has been set, false otherwise.
      */
    public boolean hasValue() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'value' field.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder clearValue() {
      value = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'Action' field.
      * @return The value.
      */
    public org.jhk.interested.serialization.avro.ACTION getAction() {
      return Action;
    }

    /**
      * Sets the value of the 'Action' field.
      * @param value The value of 'Action'.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder setAction(org.jhk.interested.serialization.avro.ACTION value) {
      validate(fields()[4], value);
      this.Action = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'Action' field has been set.
      * @return True if the 'Action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'Action' field.
      * @return This builder.
      */
    public org.jhk.interested.serialization.avro.Interest.Builder clearAction() {
      Action = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    @Override
    public Interest build() {
      try {
        Interest record = new Interest();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.userId = fieldSetFlags()[1] ? this.userId : (java.lang.Long) defaultValue(fields()[1]);
        record.timeStamp = fieldSetFlags()[2] ? this.timeStamp : (java.lang.Long) defaultValue(fields()[2]);
        record.value = fieldSetFlags()[3] ? this.value : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.Action = fieldSetFlags()[4] ? this.Action : (org.jhk.interested.serialization.avro.ACTION) defaultValue(fields()[4]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
